{
  "contractName": "FEDToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "needMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_numberOfBonds",
          "type": "uint256"
        }
      ],
      "name": "releaseBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintToDecrease",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_bondholder",
          "type": "address"
        }
      ],
      "name": "addBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBondLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "bytecode": "0x60806040526000600360146101000a81548160ff0219169083151502179055506040805190810160405280600881526020017f464544546f6b656e000000000000000000000000000000000000000000000000815250600490805190602001906200006c929190620001a2565b506040805190810160405280600381526020017f464544000000000000000000000000000000000000000000000000000000000081525060059080519060200190620000ba929190620001a2565b506002600660006101000a81548160ff021916908360ff160217905550631dcd650060075560646008556000600960006101000a81548160ff0219169083151502179055503480156200010c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506007546001819055506007546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000251565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001e557805160ff191683800117855562000216565b8280016001018555821562000216579182015b8281111562000215578251825591602001919060010190620001f8565b5b50905062000225919062000229565b5090565b6200024e91905b808211156200024a57600081600090555060010162000230565b5090565b90565b61224480620002616000396000f300608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780632363990b1461029d57806323b872dd146102cc5780632ff2e9dc14610351578063313ce5671461037c57806334706ecf146103ad57806340c10f19146103da578063661884631461043f57806370a08231146104a4578063715018a6146104fb5780637d64bcb4146105125780638da5cb5b1461054157806395d89b4114610598578063a035b1fe14610628578063a9059cbb14610653578063b7760c8f146106b8578063d73dd62314610705578063dc34334a1461076a578063dd62ed3e14610795578063e55490e51461080c578063e7b82c3414610859578063f2fde38b146108a6575b600080fd5b34801561015a57600080fd5b506101636108e9565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926108fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099a565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610a8c565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a96565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b50610337600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa9565b604051808215151515815260200191505060405180910390f35b34801561035d57600080fd5b50610366610e64565b6040518082815260200191505060405180910390f35b34801561038857600080fd5b50610391610e6a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b957600080fd5b506103d860048036038101908080359060200190929190505050610e7d565b005b3480156103e657600080fd5b50610425600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b506104e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611429565b6040518082815260200191505060405180910390f35b34801561050757600080fd5b50610510611471565b005b34801561051e57600080fd5b50610527611576565b604051808215151515815260200191505060405180910390f35b34801561054d57600080fd5b5061055661163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a457600080fd5b506105ad611664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063457600080fd5b5061063d611702565b6040518082815260200191505060405180910390f35b34801561065f57600080fd5b5061069e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611708565b604051808215151515815260200191505060405180910390f35b3480156106c457600080fd5b5061070360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611928565b005b34801561071157600080fd5b50610750600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611936565b604051808215151515815260200191505060405180910390f35b34801561077657600080fd5b5061077f611b32565b6040518082815260200191505060405180910390f35b3480156107a157600080fd5b506107f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b3f565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061085760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc6565b005b34801561086557600080fd5b506108a460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd5565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b005b600360149054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b600960009054906101000a900460ff1681565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610af857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bbf57600080fd5b610c10826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d7482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60075481565b600660009054906101000a900460ff1681565b60008082111515610e8d57600080fd5b6000600a8054905014151515610ea257600080fd5b600090505b81811015610fad57600a81815481101515610ebe57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c062dc5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610f4c57600080fd5b505af1158015610f60573d6000803e3d6000fd5b50505050600a81815481101515610f7357fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558080600101915050610ea7565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b600360149054906101000a900460ff1615151561102b57600080fd5b61104082600154611de090919063ffffffff16565b600181905550611097826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156112a9576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133d565b6112bc8382611dc790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114cd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d457600080fd5b600360149054906101000a900460ff161515156115f057600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b505050505081565b60085481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561175757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179357600080fd5b6117e4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611877826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6119328282611928565b5050565b60006119c782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600a80549050905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611bd08183610fb1565b505050565b6000818330611be2611ef8565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f080158015611c6e573d6000803e3d6000fd5b509050600a8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050826000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbb57600080fd5b611dc481611dfc565b50565b6000828211151515611dd557fe5b818303905092915050565b60008183019050828110151515611df357fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e3857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161031080611f09833901905600608060405234801561001057600080fd5b50604051606080610310833981018060405281019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ee806101226000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c062dc5f14610046575b600080fd5b34801561005257600080fd5b5061005b61005d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7760c8f6001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156101a857600080fd5b505af11580156101bc573d6000803e3d6000fd5b505050505600a165627a7a723058201a06e91d44eb8da17b52179cf1e796bb181c6407230d15a094b016230b094a380029a165627a7a7230582076670545c6037c9379fbcd8de2545b6817ac91ddb2e21401d4a1bc3d57dc356f0029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780632363990b1461029d57806323b872dd146102cc5780632ff2e9dc14610351578063313ce5671461037c57806334706ecf146103ad57806340c10f19146103da578063661884631461043f57806370a08231146104a4578063715018a6146104fb5780637d64bcb4146105125780638da5cb5b1461054157806395d89b4114610598578063a035b1fe14610628578063a9059cbb14610653578063b7760c8f146106b8578063d73dd62314610705578063dc34334a1461076a578063dd62ed3e14610795578063e55490e51461080c578063e7b82c3414610859578063f2fde38b146108a6575b600080fd5b34801561015a57600080fd5b506101636108e9565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926108fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099a565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610a8c565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a96565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b50610337600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa9565b604051808215151515815260200191505060405180910390f35b34801561035d57600080fd5b50610366610e64565b6040518082815260200191505060405180910390f35b34801561038857600080fd5b50610391610e6a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b957600080fd5b506103d860048036038101908080359060200190929190505050610e7d565b005b3480156103e657600080fd5b50610425600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b506104e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611429565b6040518082815260200191505060405180910390f35b34801561050757600080fd5b50610510611471565b005b34801561051e57600080fd5b50610527611576565b604051808215151515815260200191505060405180910390f35b34801561054d57600080fd5b5061055661163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a457600080fd5b506105ad611664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063457600080fd5b5061063d611702565b6040518082815260200191505060405180910390f35b34801561065f57600080fd5b5061069e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611708565b604051808215151515815260200191505060405180910390f35b3480156106c457600080fd5b5061070360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611928565b005b34801561071157600080fd5b50610750600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611936565b604051808215151515815260200191505060405180910390f35b34801561077657600080fd5b5061077f611b32565b6040518082815260200191505060405180910390f35b3480156107a157600080fd5b506107f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b3f565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061085760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc6565b005b34801561086557600080fd5b506108a460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd5565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b005b600360149054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b600960009054906101000a900460ff1681565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610af857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bbf57600080fd5b610c10826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d7482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60075481565b600660009054906101000a900460ff1681565b60008082111515610e8d57600080fd5b6000600a8054905014151515610ea257600080fd5b600090505b81811015610fad57600a81815481101515610ebe57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c062dc5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610f4c57600080fd5b505af1158015610f60573d6000803e3d6000fd5b50505050600a81815481101515610f7357fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558080600101915050610ea7565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b600360149054906101000a900460ff1615151561102b57600080fd5b61104082600154611de090919063ffffffff16565b600181905550611097826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156112a9576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133d565b6112bc8382611dc790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114cd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d457600080fd5b600360149054906101000a900460ff161515156115f057600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b505050505081565b60085481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561175757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179357600080fd5b6117e4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611877826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6119328282611928565b5050565b60006119c782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600a80549050905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611bd08183610fb1565b505050565b6000818330611be2611ef8565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f080158015611c6e573d6000803e3d6000fd5b509050600a8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050826000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbb57600080fd5b611dc481611dfc565b50565b6000828211151515611dd557fe5b818303905092915050565b60008183019050828110151515611df357fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e3857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161031080611f09833901905600608060405234801561001057600080fd5b50604051606080610310833981018060405281019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ee806101226000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c062dc5f14610046575b600080fd5b34801561005257600080fd5b5061005b61005d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7760c8f6001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156101a857600080fd5b505af11580156101bc573d6000803e3d6000fd5b505050505600a165627a7a723058201a06e91d44eb8da17b52179cf1e796bb181c6407230d15a094b016230b094a380029a165627a7a7230582076670545c6037c9379fbcd8de2545b6817ac91ddb2e21401d4a1bc3d57dc356f0029",
  "sourceMap": "232:1752:0:-;;;466:5:7;436:35;;;;;;;;;;;;;;;;;;;;273:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;310:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;368:1;344:25;;;;;;;;;;;;;;;;;;;;404:9;375:38;;498:3;480:21;;528:5;507:26;;;;;;;;;;;;;;;;;;;;557:114;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:114:0;575:10:3;567:5;;:18;;;;;;;;;;;;;;;;;;603:14:0;;588:12;:29;;;;650:14;;627:8;:20;636:10;627:20;;;;;;;;;;;;;;;:37;;;;232:1752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "232:1752:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;273:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:4;;;;;;;;;;;;;;;;;;;;;;;507:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;507:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;726:470:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:470:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:38:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:38:0;;;;;;;;;;;;;;;;;;;;;;;344:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;809:256;;8:9:-1;5:2;;;30:1;27;20:12;5:2;809:256:0;;;;;;;;;;;;;;;;;;;;;;;;;;854:312:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:3;;;;;;1280:140:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:140:7;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;310:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;310:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;480:21:0;;;;;;;;;;;;;;;;;;;;;;;626:321:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:321:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1880:101:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1880:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1789:86:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1789:86:0;;;;;;;;;;;;;;;;;;;;;;;2321:153:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1252:137:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1252:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1562:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:7;;;;;;;;;;;;;:::o;273:31:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:8:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;389:83:4:-;433:7;455:12;;448:19;;389:83;:::o;507:26:0:-;;;;;;;;;;;;;:::o;726:470:8:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;375:38:0:-;;;;:::o;344:25::-;;;;;;;;;;;;;:::o;809:256::-;944:6;892:1;875:14;:18;867:27;;;;;;;;928:1;912:5;:12;;;;:17;;904:26;;;;;;;;953:1;944:10;;940:118;959:14;957:1;:16;940:118;;;994:5;1000:1;994:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;994:24:0;;;;1039:5;1045:1;1039:8;;;;;;;;;;;;;;;;;;1032:15;;;;;;;;;;;975:3;;;;;;;940:118;;;809:256;;:::o;854:312:7:-;968:4;600:5;;;;;;;;;;;586:19;;:10;:19;;;578:28;;;;;;;;511:15;;;;;;;;;;;510:16;502:25;;;;;;;;997;1014:7;997:12;;:16;;:25;;;;:::i;:::-;982:12;:40;;;;1044:26;1062:7;1044:8;:13;1053:3;1044:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;1028:8;:13;1037:3;1028:13;;;;;;;;;;;;;;;:42;;;;1086:3;1081:18;;;1091:7;1081:18;;;;;;;;;;;;;;;;;;1131:3;1110:34;;1127:1;1110:34;;;1136:7;1110:34;;;;;;;;;;;;;;;;;;1157:4;1150:11;;854:312;;;;:::o;3679:432:8:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;1149:99:4:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;1001:111:3:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1280:140:7:-;1339:4;719:5:3;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;511:15:7;;;;;;;;;;;510:16;502:25;;;;;;;;1369:4;1351:15;;:22;;;;;;;;;;;;;;;;;;1384:14;;;;;;;;;;1411:4;1404:11;;1280:140;:::o;238:20:3:-;;;;;;;;;;;;;:::o;310:28:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;480:21::-;;;;:::o;626:321:4:-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;1880:101:0:-;1946:27;1955:7;1964:8;1946;:27::i;:::-;1880:101;;:::o;2926:296:8:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;1789:86:0:-;1834:4;1856:5;:12;;;;1849:19;;1789:86;:::o;2321:153:8:-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1252:137:0:-;1319:17;1324:3;1328:7;1319:4;:17::i;:::-;;1252:137;;:::o;1562:222::-;1630:9;1651:11;1663:7;1679:4;1642:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1642:43:0;1630:55;;1695:5;1706:4;1695:16;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1695:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1769:7;1745:8;:21;1754:11;1745:21;;;;;;;;;;;;;;;;:31;1721:8;:21;1730:11;1721:21;;;;;;;;;;;;;;;:55;;;;1562:222;;;:::o;1274:103:3:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1060:116:2:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1512:171:3:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;232:1752:0:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\n/**\n * @title FedToken\n * @dev ERC20 compatible token that responds to price increases and keeps the value\n * of the token stable\n */\ncontract FEDToken is MintableToken {\n    string public name = \"FEDToken\";\n    string public symbol = \"FED\";\n    uint8 public decimals = 2;\n    uint public INITIAL_SUPPLY = 500000000;\n    //status of how much money accounts want to put as bonds\n    uint public price=100;\n    bool public needMint=false;\n    BOND[] bonds;\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }  \n     /**\n     * @dev transfers value of bond back to owner\n     * @param _numberOfBonds the number of bonds to be released\n     */\n    function releaseBond(uint _numberOfBonds) public{\n        require(_numberOfBonds > 0);\n        require(bonds.length != 0);\n        for(uint i = 0 ; i<_numberOfBonds; i++) {\n            bonds[i].releaseAmount();\n            delete bonds[i];\n        }\n\n    }\n      /**\n     * @dev mints more tokens, called for every token holder\n     * @param _amount amount of tokens to be minted to\n     * @param _to address to mint the tokens to\n     */\n    function mintToDecrease(uint _amount,address _to) public {\n        mint(_to,_amount); //mint requires that the owner is calling it\n\n    }\n     /**\n     * @dev adds bonds that store tokens\n     * @param _amount amount of tokens to be stored\n     * @param _bondholder the address that holds the bond\n     */\n    function addBond(uint _amount, address _bondholder) public{\n        BOND bond = new BOND(_bondholder,_amount,address(this));\n        bonds.push(bond);\n        balances[_bondholder] = balances[_bondholder] - _amount;\n\n    }\n    function getBondLength() public view returns(uint){\n        return bonds.length;\n    }\n    function transfer(uint _amount, address _address) public{\n        transfer(_amount, _address);\n\n    }\n\n}\ncontract BOND {\n    address bondHolder;\n    uint amount;\n    address fedTokenAddress;\n    FEDToken Fed;\n    address owner;\n    constructor(address _bondHolder, uint _amount,address _fedToken) public{\n        bondHolder = _bondHolder;\n        amount = _amount;\n        fedTokenAddress = _fedToken;\n        owner = msg.sender;\n\n    } \n     /**\n     * @dev releases the tokens in the bond contract\n     */\n    function releaseAmount() public {\n        Fed = FEDToken(fedTokenAddress);\n        Fed.transfer(amount,bondHolder);\n    }\n\n}",
  "sourcePath": "/home/satya/dev/FEDToken/contracts/FEDToken.sol",
=======
  "bytecode": "0x60806040526000600360146101000a81548160ff0219169083151502179055506040805190810160405280600881526020017f464544546f6b656e000000000000000000000000000000000000000000000000815250600490805190602001906200006c929190620001a2565b506040805190810160405280600381526020017f464544000000000000000000000000000000000000000000000000000000000081525060059080519060200190620000ba929190620001a2565b506002600660006101000a81548160ff021916908360ff160217905550631dcd650060075560646008556000600960006101000a81548160ff0219169083151502179055503480156200010c57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506007546001819055506007546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000251565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001e557805160ff191683800117855562000216565b8280016001018555821562000216579182015b8281111562000215578251825591602001919060010190620001f8565b5b50905062000225919062000229565b5090565b6200024e91905b808211156200024a57600081600090555060010162000230565b5090565b90565b61224480620002616000396000f300608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780632363990b1461029d57806323b872dd146102cc5780632ff2e9dc14610351578063313ce5671461037c57806334706ecf146103ad57806340c10f19146103da578063661884631461043f57806370a08231146104a4578063715018a6146104fb5780637d64bcb4146105125780638da5cb5b1461054157806395d89b4114610598578063a035b1fe14610628578063a9059cbb14610653578063b7760c8f146106b8578063d73dd62314610705578063dc34334a1461076a578063dd62ed3e14610795578063e55490e51461080c578063e7b82c3414610859578063f2fde38b146108a6575b600080fd5b34801561015a57600080fd5b506101636108e9565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926108fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099a565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610a8c565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a96565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b50610337600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa9565b604051808215151515815260200191505060405180910390f35b34801561035d57600080fd5b50610366610e64565b6040518082815260200191505060405180910390f35b34801561038857600080fd5b50610391610e6a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b957600080fd5b506103d860048036038101908080359060200190929190505050610e7d565b005b3480156103e657600080fd5b50610425600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b506104e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611429565b6040518082815260200191505060405180910390f35b34801561050757600080fd5b50610510611471565b005b34801561051e57600080fd5b50610527611576565b604051808215151515815260200191505060405180910390f35b34801561054d57600080fd5b5061055661163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a457600080fd5b506105ad611664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063457600080fd5b5061063d611702565b6040518082815260200191505060405180910390f35b34801561065f57600080fd5b5061069e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611708565b604051808215151515815260200191505060405180910390f35b3480156106c457600080fd5b5061070360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611928565b005b34801561071157600080fd5b50610750600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611936565b604051808215151515815260200191505060405180910390f35b34801561077657600080fd5b5061077f611b32565b6040518082815260200191505060405180910390f35b3480156107a157600080fd5b506107f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b3f565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061085760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc6565b005b34801561086557600080fd5b506108a460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd5565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b005b600360149054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b600960009054906101000a900460ff1681565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610af857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bbf57600080fd5b610c10826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d7482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60075481565b600660009054906101000a900460ff1681565b60008082111515610e8d57600080fd5b6000600a8054905014151515610ea257600080fd5b600090505b81811015610fad57600a81815481101515610ebe57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c062dc5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610f4c57600080fd5b505af1158015610f60573d6000803e3d6000fd5b50505050600a81815481101515610f7357fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558080600101915050610ea7565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b600360149054906101000a900460ff1615151561102b57600080fd5b61104082600154611de090919063ffffffff16565b600181905550611097826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156112a9576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133d565b6112bc8382611dc790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114cd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d457600080fd5b600360149054906101000a900460ff161515156115f057600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b505050505081565b60085481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561175757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179357600080fd5b6117e4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611877826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6119328282611928565b5050565b60006119c782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600a80549050905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611bd08183610fb1565b505050565b6000818330611be2611ef8565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f080158015611c6e573d6000803e3d6000fd5b509050600a8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050826000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbb57600080fd5b611dc481611dfc565b50565b6000828211151515611dd557fe5b818303905092915050565b60008183019050828110151515611df357fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e3857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161031080611f09833901905600608060405234801561001057600080fd5b50604051606080610310833981018060405281019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ee806101226000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c062dc5f14610046575b600080fd5b34801561005257600080fd5b5061005b61005d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7760c8f6001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156101a857600080fd5b505af11580156101bc573d6000803e3d6000fd5b505050505600a165627a7a72305820c457f34c100287ab929a5343a8d1264d7a184487c25544411a5de372844e381a0029a165627a7a72305820f27edbeed6275619bf97f762379d9844ba7809081ad3538ba4e6a8714ef265800029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780632363990b1461029d57806323b872dd146102cc5780632ff2e9dc14610351578063313ce5671461037c57806334706ecf146103ad57806340c10f19146103da578063661884631461043f57806370a08231146104a4578063715018a6146104fb5780637d64bcb4146105125780638da5cb5b1461054157806395d89b4114610598578063a035b1fe14610628578063a9059cbb14610653578063b7760c8f146106b8578063d73dd62314610705578063dc34334a1461076a578063dd62ed3e14610795578063e55490e51461080c578063e7b82c3414610859578063f2fde38b146108a6575b600080fd5b34801561015a57600080fd5b506101636108e9565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926108fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099a565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610a8c565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610a96565b604051808215151515815260200191505060405180910390f35b3480156102d857600080fd5b50610337600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa9565b604051808215151515815260200191505060405180910390f35b34801561035d57600080fd5b50610366610e64565b6040518082815260200191505060405180910390f35b34801561038857600080fd5b50610391610e6a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103b957600080fd5b506103d860048036038101908080359060200190929190505050610e7d565b005b3480156103e657600080fd5b50610425600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b506104e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611429565b6040518082815260200191505060405180910390f35b34801561050757600080fd5b50610510611471565b005b34801561051e57600080fd5b50610527611576565b604051808215151515815260200191505060405180910390f35b34801561054d57600080fd5b5061055661163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a457600080fd5b506105ad611664565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ed5780820151818401526020810190506105d2565b50505050905090810190601f16801561061a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063457600080fd5b5061063d611702565b6040518082815260200191505060405180910390f35b34801561065f57600080fd5b5061069e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611708565b604051808215151515815260200191505060405180910390f35b3480156106c457600080fd5b5061070360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611928565b005b34801561071157600080fd5b50610750600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611936565b604051808215151515815260200191505060405180910390f35b34801561077657600080fd5b5061077f611b32565b6040518082815260200191505060405180910390f35b3480156107a157600080fd5b506107f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b3f565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061085760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc6565b005b34801561086557600080fd5b506108a460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd5565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b005b600360149054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b600960009054906101000a900460ff1681565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610af857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610b8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bbf57600080fd5b610c10826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca3826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d7482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60075481565b600660009054906101000a900460ff1681565b60008082111515610e8d57600080fd5b6000600a8054905014151515610ea257600080fd5b600090505b81811015610fad57600a81815481101515610ebe57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c062dc5f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610f4c57600080fd5b505af1158015610f60573d6000803e3d6000fd5b50505050600a81815481101515610f7357fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558080600101915050610ea7565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b600360149054906101000a900460ff1615151561102b57600080fd5b61104082600154611de090919063ffffffff16565b600181905550611097826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015156112a9576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133d565b6112bc8382611dc790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114cd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d457600080fd5b600360149054906101000a900460ff161515156115f057600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b505050505081565b60085481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561175757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179357600080fd5b6117e4826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611dc790919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611877826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6119328282611928565b5050565b60006119c782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611de090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600a80549050905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611bd08183610fb1565b505050565b6000818330611be2611ef8565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f080158015611c6e573d6000803e3d6000fd5b509050600a8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050826000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbb57600080fd5b611dc481611dfc565b50565b6000828211151515611dd557fe5b818303905092915050565b60008183019050828110151515611df357fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e3857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161031080611f09833901905600608060405234801561001057600080fd5b50604051606080610310833981018060405281019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ee806101226000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c062dc5f14610046575b600080fd5b34801561005257600080fd5b5061005b61005d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7760c8f6001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156101a857600080fd5b505af11580156101bc573d6000803e3d6000fd5b505050505600a165627a7a72305820c457f34c100287ab929a5343a8d1264d7a184487c25544411a5de372844e381a0029a165627a7a72305820f27edbeed6275619bf97f762379d9844ba7809081ad3538ba4e6a8714ef265800029",
  "sourceMap": "240:1806:0:-;;;466:5:6;436:35;;;;;;;;;;;;;;;;;;;;282:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;320:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;379:1;355:25;;;;;;;;;;;;;;;;;;;;416:9;387:38;;512:3;494:21;;543:5;522:26;;;;;;;;;;;;;;;;;;;;574:117;8:9:-1;5:2;;;30:1;27;20:12;5:2;574:117:0;575:10:2;567:5;;:18;;;;;;;;;;;;;;;;;;621:14:0;;606:12;:29;;;;669:14;;646:8;:20;655:10;646:20;;;;;;;;;;;;;;;:37;;;;240:1806;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "240:1806:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;282:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;282:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;282:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:3;;;;;;;;;;;;;;;;;;;;;;;522:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;522:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;726:470:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:470:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:38:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:38:0;;;;;;;;;;;;;;;;;;;;;;;355:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;834:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;834:264:0;;;;;;;;;;;;;;;;;;;;;;;;;;854:312:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:312:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:2;;;;;;1280:140:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:140:6;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;320:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;320:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;320:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;494:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;494:21:0;;;;;;;;;;;;;;;;;;;;;;;626:321:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:321:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:104:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1937:104:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:88:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1843:88:0;;;;;;;;;;;;;;;;;;;;;;;2321:153:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1291:140:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1291:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1610:227:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:6;;;;;;;;;;;;;:::o;282:31:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:7:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;389:83:3:-;433:7;455:12;;448:19;;389:83;:::o;522:26:0:-;;;;;;;;;;;;;:::o;726:470:7:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;387:38:0:-;;;;:::o;355:25::-;;;;;;;;;;;;;:::o;834:264::-;972:6;918:1;901:14;:18;893:27;;;;;;;;955:1;939:5;:12;;;;:17;;931:26;;;;;;;;981:1;972:10;;968:121;987:14;985:1;:16;968:121;;;1023:5;1029:1;1023:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1023:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1023:24:0;;;;1069:5;1075:1;1069:8;;;;;;;;;;;;;;;;;;1062:15;;;;;;;;;;;1003:3;;;;;;;968:121;;;834:264;;:::o;854:312:6:-;968:4;600:5;;;;;;;;;;;586:19;;:10;:19;;;578:28;;;;;;;;511:15;;;;;;;;;;;510:16;502:25;;;;;;;;997;1014:7;997:12;;:16;;:25;;;;:::i;:::-;982:12;:40;;;;1044:26;1062:7;1044:8;:13;1053:3;1044:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;1028:8;:13;1037:3;1028:13;;;;;;;;;;;;;;;:42;;;;1086:3;1081:18;;;1091:7;1081:18;;;;;;;;;;;;;;;;;;1131:3;1110:34;;1127:1;1110:34;;;1136:7;1110:34;;;;;;;;;;;;;;;;;;1157:4;1150:11;;854:312;;;;:::o;3679:432:7:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;1149:99:3:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;1001:111:2:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1280:140:6:-;1339:4;719:5:2;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;511:15:6;;;;;;;;;;;510:16;502:25;;;;;;;;1369:4;1351:15;;:22;;;;;;;;;;;;;;;;;;1384:14;;;;;;;;;;1411:4;1404:11;;1280:140;:::o;238:20:2:-;;;;;;;;;;;;;:::o;320:28:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;494:21::-;;;;:::o;626:321:3:-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;1937:104:0:-;2004:27;2013:7;2022:8;2004;:27::i;:::-;1937:104;;:::o;2926:296:7:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;1843:88:0:-;1888:4;1911:5;:12;;;;1904:19;;1843:88;:::o;2321:153:7:-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1291:140:0:-;1359:17;1364:3;1368:7;1359:4;:17::i;:::-;;1291:140;;:::o;1610:227::-;1679:9;1700:11;1712:7;1728:4;1691:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1691:43:0;1679:55;;1745:5;1756:4;1745:16;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1745:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1820:7;1796:8;:21;1805:11;1796:21;;;;;;;;;;;;;;;;:31;1772:8;:21;1781:11;1772:21;;;;;;;;;;;;;;;:55;;;;1610:227;;;:::o;1274:103:2:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1060:116:1:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1512:171:2:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;240:1806:0:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\r\n/**\r\n * @title FedToken\r\n * @dev ERC20 compatible token that responds to price increases and keeps the value\r\n * of the token stable\r\n */\r\ncontract FEDToken is MintableToken {\r\n    string public name = \"FEDToken\";\r\n    string public symbol = \"FED\";\r\n    uint8 public decimals = 2;\r\n    uint public INITIAL_SUPPLY = 500000000;\r\n    //status of how much money accounts want to put as bonds\r\n    uint public price=100;\r\n    bool public needMint=false;\r\n    BOND[] bonds;\r\n    constructor() public {\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n    }  \r\n     /**\r\n     * @dev transfers value of bond back to owner\r\n     * @param _numberOfBonds the number of bonds to be released\r\n     */\r\n    function releaseBond(uint _numberOfBonds) public{\r\n        require(_numberOfBonds > 0);\r\n        require(bonds.length != 0);\r\n        for(uint i = 0 ; i<_numberOfBonds; i++) {\r\n            bonds[i].releaseAmount();\r\n            delete bonds[i];\r\n        }\r\n\r\n    }\r\n      /**\r\n     * @dev mints more tokens, called for every token holder\r\n     * @param _amount amount of tokens to be minted to\r\n     * @param _to address to mint the tokens to\r\n     */\r\n    function mintToDecrease(uint _amount,address _to) public {\r\n        mint(_to,_amount); //mint requires that the owner is calling it\r\n\r\n    }\r\n     /**\r\n     * @dev adds bonds that store tokens\r\n     * @param _amount amount of tokens to be stored\r\n     * @param _bondholder the address that holds the bond\r\n     */\r\n    function addBond(uint _amount, address _bondholder) public{\r\n        BOND bond = new BOND(_bondholder,_amount,address(this));\r\n        bonds.push(bond);\r\n        balances[_bondholder] = balances[_bondholder] - _amount;\r\n\r\n    }\r\n    function getBondLength() public view returns(uint){\r\n        return bonds.length;\r\n    }\r\n    function transfer(uint _amount, address _address) public{\r\n        transfer(_amount, _address);\r\n\r\n    }\r\n\r\n}\r\ncontract BOND {\r\n    address bondHolder;\r\n    uint amount;\r\n    address fedTokenAddress;\r\n    FEDToken Fed;\r\n    address owner;\r\n    constructor(address _bondHolder, uint _amount,address _fedToken) public{\r\n        bondHolder = _bondHolder;\r\n        amount = _amount;\r\n        fedTokenAddress = _fedToken;\r\n        owner = msg.sender;\r\n\r\n    } \r\n     /**\r\n     * @dev releases the tokens in the bond contract\r\n     */\r\n    function releaseAmount() public {\r\n        Fed = FEDToken(fedTokenAddress);\r\n        Fed.transfer(amount,bondHolder);\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\dev\\FedToken\\contracts\\fedtoken.sol",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
  "ast": {
    "absolutePath": "/home/satya/dev/FEDToken/contracts/FEDToken.sol",
    "exportedSymbols": {
      "BOND": [
        208
      ],
      "FEDToken": [
        153
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 209,
<<<<<<< HEAD
        "sourceUnit": 723,
        "src": "26:71:0",
=======
        "sourceUnit": 666,
        "src": "28:71:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 722,
              "src": "253:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$722",
=======
              "referencedDeclaration": 665,
              "src": "261:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$665",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                "typeString": "contract MintableToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
<<<<<<< HEAD
            "src": "253:13:0"
=======
            "src": "261:13:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
          }
        ],
        "contractDependencies": [
          208,
<<<<<<< HEAD
          445,
          541,
          584,
          616,
          722,
          969
        ],
        "contractKind": "contract",
        "documentation": "@title FedToken\n@dev ERC20 compatible token that responds to price increases and keeps the value\nof the token stable",
=======
          388,
          484,
          527,
          559,
          665,
          912
        ],
        "contractKind": "contract",
        "documentation": "@title FedToken\r\n@dev ERC20 compatible token that responds to price increases and keeps the value\r\nof the token stable\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153,
<<<<<<< HEAD
          722,
          445,
          969,
          541,
          584,
          616
=======
          665,
          388,
          912,
          484,
          527,
          559
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        ],
        "name": "FEDToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "273:31:0",
=======
            "src": "282:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "273:6:0",
=======
              "src": "282:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "464544546f6b656e",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "294:10:0",
=======
              "src": "303:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_df0a320da3799808dc953aab59040a7be33091aecc5da1209fe3836856948e8f",
                "typeString": "literal_string \"FEDToken\""
              },
              "value": "FEDToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "310:28:0",
=======
            "src": "320:28:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "310:6:0",
=======
              "src": "320:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "464544",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "333:5:0",
=======
              "src": "343:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_016972da6aa6b866309992c38768edc71dfd1c8d0e036a6339dc0369cd2065db",
                "typeString": "literal_string \"FED\""
              },
              "value": "FED"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "344:25:0",
=======
            "src": "355:25:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 11,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "344:5:0",
=======
              "src": "355:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "368:1:0",
=======
              "src": "379:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "375:38:0",
=======
            "src": "387:38:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "375:4:0",
=======
              "src": "387:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "404:9:0",
=======
              "src": "416:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000_by_1",
                "typeString": "int_const 500000000"
              },
              "value": "500000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "480:21:0",
=======
            "src": "494:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "480:4:0",
=======
              "src": "494:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "498:3:0",
=======
              "src": "512:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "name": "needMint",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "507:26:0",
=======
            "src": "522:26:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "507:4:0",
=======
              "src": "522:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "528:5:0",
=======
              "src": "543:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "bonds",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "539:12:0",
=======
            "src": "555:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
              "typeString": "contract BOND[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 23,
                "name": "BOND",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 208,
<<<<<<< HEAD
                "src": "539:4:0",
=======
                "src": "555:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_BOND_$208",
                  "typeString": "contract BOND"
                }
              },
              "id": 24,
              "length": null,
              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
              "src": "539:6:0",
=======
              "src": "555:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage_ptr",
                "typeString": "contract BOND[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "578:93:0",
=======
              "src": "595:96:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 460,
                      "src": "588:12:0",
=======
                      "referencedDeclaration": 403,
                      "src": "606:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
<<<<<<< HEAD
                      "src": "603:14:0",
=======
                      "src": "621:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "588:29:0",
=======
                    "src": "606:29:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "588:29:0"
=======
                  "src": "606:29:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 458,
                        "src": "627:8:0",
=======
                        "referencedDeclaration": 401,
                        "src": "646:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 35,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 984,
                          "src": "636:3:0",
=======
                          "referencedDeclaration": 927,
                          "src": "655:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "636:10:0",
=======
                        "src": "655:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "627:20:0",
=======
                      "src": "646:20:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
<<<<<<< HEAD
                      "src": "650:14:0",
=======
                      "src": "669:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "627:37:0",
=======
                    "src": "646:37:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "627:37:0"
=======
                  "src": "646:37:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 40,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "568:2:0"
=======
              "src": "585:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "578:0:0"
            },
            "scope": 153,
            "src": "557:114:0",
=======
              "src": "595:0:0"
            },
            "scope": 153,
            "src": "574:117:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "857:208:0",
=======
              "src": "882:216:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "_numberOfBonds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
<<<<<<< HEAD
                          "src": "875:14:0",
=======
                          "src": "901:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "892:1:0",
=======
                          "src": "918:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "875:18:0",
=======
                        "src": "901:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "867:7:0",
=======
                        930,
                        931
                      ],
                      "referencedDeclaration": 930,
                      "src": "893:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "867:27:0",
=======
                    "src": "893:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "867:27:0"
=======
                  "src": "893:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "bonds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
<<<<<<< HEAD
                            "src": "912:5:0",
=======
                            "src": "939:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                              "typeString": "contract BOND[] storage ref"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "912:12:0",
=======
                          "src": "939:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "928:1:0",
=======
                          "src": "955:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "912:17:0",
=======
                        "src": "939:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "904:7:0",
=======
                        930,
                        931
                      ],
                      "referencedDeclaration": 930,
                      "src": "931:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "904:26:0",
=======
                    "src": "931:26:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "904:26:0"
=======
                  "src": "931:26:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "980:78:0",
=======
                    "src": "1008:81:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "bonds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
<<<<<<< HEAD
                                "src": "994:5:0",
=======
                                "src": "1023:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                                  "typeString": "contract BOND[] storage ref"
                                }
                              },
                              "id": 70,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 69,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
<<<<<<< HEAD
                                "src": "1000:1:0",
=======
                                "src": "1029:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "994:8:0",
=======
                              "src": "1023:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BOND_$208",
                                "typeString": "contract BOND"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "releaseAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
<<<<<<< HEAD
                            "src": "994:22:0",
=======
                            "src": "1023:22:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "994:24:0",
=======
                          "src": "1023:24:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "994:24:0"
=======
                        "src": "1023:24:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "1032:15:0",
=======
                          "src": "1062:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 74,
                              "name": "bonds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
<<<<<<< HEAD
                              "src": "1039:5:0",
=======
                              "src": "1069:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                                "typeString": "contract BOND[] storage ref"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 75,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
<<<<<<< HEAD
                              "src": "1045:1:0",
=======
                              "src": "1075:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1039:8:0",
=======
                            "src": "1069:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BOND_$208",
                              "typeString": "contract BOND"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "1032:15:0"
=======
                        "src": "1062:15:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
<<<<<<< HEAD
                      "src": "957:1:0",
=======
                      "src": "985:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "_numberOfBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
<<<<<<< HEAD
                      "src": "959:14:0",
=======
                      "src": "987:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "957:16:0",
=======
                    "src": "985:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "initializationExpression": {
                    "assignments": [
                      59
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
<<<<<<< HEAD
                        "src": "944:6:0",
=======
                        "src": "972:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "944:4:0",
=======
                          "src": "972:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 61,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "953:1:0",
=======
                      "src": "981:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "944:10:0"
=======
                    "src": "972:10:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "975:3:0",
=======
                      "src": "1003:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
<<<<<<< HEAD
                        "src": "975:1:0",
=======
                        "src": "1003:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "975:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "940:118:0"
                }
              ]
            },
            "documentation": "@dev transfers value of bond back to owner\n@param _numberOfBonds the number of bonds to be released",
=======
                    "src": "1003:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "968:121:0"
                }
              ]
            },
            "documentation": "@dev transfers value of bond back to owner\r\n@param _numberOfBonds the number of bonds to be released\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 82,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "releaseBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "_numberOfBonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
<<<<<<< HEAD
                  "src": "830:19:0",
=======
                  "src": "855:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "830:4:0",
=======
                    "src": "855:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "829:21:0"
=======
              "src": "854:21:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "857:0:0"
            },
            "scope": 153,
            "src": "809:256:0",
=======
              "src": "882:0:0"
            },
            "scope": 153,
            "src": "834:264:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1309:80:0",
=======
              "src": "1348:83:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
<<<<<<< HEAD
                        "src": "1324:3:0",
=======
                        "src": "1364:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
<<<<<<< HEAD
                        "src": "1328:7:0",
=======
                        "src": "1368:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 702,
                      "src": "1319:4:0",
=======
                      "referencedDeclaration": 645,
                      "src": "1359:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1319:17:0",
=======
                    "src": "1359:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1319:17:0"
                }
              ]
            },
            "documentation": "@dev mints more tokens, called for every token holder\n@param _amount amount of tokens to be minted to\n@param _to address to mint the tokens to",
=======
                  "src": "1359:17:0"
                }
              ]
            },
            "documentation": "@dev mints more tokens, called for every token holder\r\n@param _amount amount of tokens to be minted to\r\n@param _to address to mint the tokens to\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mintToDecrease",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
<<<<<<< HEAD
                  "src": "1276:12:0",
=======
                  "src": "1315:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1276:4:0",
=======
                    "src": "1315:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
<<<<<<< HEAD
                  "src": "1289:11:0",
=======
                  "src": "1328:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1289:7:0",
=======
                    "src": "1328:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1275:26:0"
=======
              "src": "1314:26:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1309:0:0"
            },
            "scope": 153,
            "src": "1252:137:0",
=======
              "src": "1348:0:0"
            },
            "scope": 153,
            "src": "1291:140:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1620:164:0",
=======
              "src": "1668:169:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "assignments": [
                    103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103,
                      "name": "bond",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
<<<<<<< HEAD
                      "src": "1630:9:0",
=======
                      "src": "1679:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BOND_$208",
                        "typeString": "contract BOND"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 102,
                        "name": "BOND",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 208,
<<<<<<< HEAD
                        "src": "1630:4:0",
=======
                        "src": "1679:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_bondholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
<<<<<<< HEAD
                        "src": "1651:11:0",
=======
                        "src": "1700:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
<<<<<<< HEAD
                        "src": "1663:7:0",
=======
                        "src": "1712:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1011,
                            "src": "1679:4:0",
=======
                            "referencedDeclaration": 954,
                            "src": "1728:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FEDToken_$153",
                              "typeString": "contract FEDToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FEDToken_$153",
                              "typeString": "contract FEDToken"
                            }
                          ],
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1671:7:0",
=======
                          "src": "1720:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1671:13:0",
=======
                        "src": "1720:13:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "1642:8:0",
=======
                      "src": "1691:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_BOND_$208_$",
                        "typeString": "function (address,uint256,address) returns (contract BOND)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 104,
                        "name": "BOND",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 208,
<<<<<<< HEAD
                        "src": "1646:4:0",
=======
                        "src": "1695:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1642:43:0",
=======
                    "src": "1691:43:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BOND_$208",
                      "typeString": "contract BOND"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1630:55:0"
=======
                  "src": "1679:55:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
<<<<<<< HEAD
                        "src": "1706:4:0",
=======
                        "src": "1756:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "bonds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
<<<<<<< HEAD
                        "src": "1695:5:0",
=======
                        "src": "1745:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                          "typeString": "contract BOND[] storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "1695:10:0",
=======
                      "src": "1745:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_BOND_$208_$returns$_t_uint256_$",
                        "typeString": "function (contract BOND) returns (uint256)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1695:16:0",
=======
                    "src": "1745:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1695:16:0"
=======
                  "src": "1745:16:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 458,
                        "src": "1721:8:0",
=======
                        "referencedDeclaration": 401,
                        "src": "1772:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "_bondholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
<<<<<<< HEAD
                        "src": "1730:11:0",
=======
                        "src": "1781:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1721:21:0",
=======
                      "src": "1772:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 122,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 458,
                          "src": "1745:8:0",
=======
                          "referencedDeclaration": 401,
                          "src": "1796:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_bondholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
<<<<<<< HEAD
                          "src": "1754:11:0",
=======
                          "src": "1805:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1745:21:0",
=======
                        "src": "1796:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
<<<<<<< HEAD
                        "src": "1769:7:0",
=======
                        "src": "1820:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      "src": "1745:31:0",
=======
                      "src": "1796:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1721:55:0",
=======
                    "src": "1772:55:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1721:55:0"
                }
              ]
            },
            "documentation": "@dev adds bonds that store tokens\n@param _amount amount of tokens to be stored\n@param _bondholder the address that holds the bond",
=======
                  "src": "1772:55:0"
                }
              ]
            },
            "documentation": "@dev adds bonds that store tokens\r\n@param _amount amount of tokens to be stored\r\n@param _bondholder the address that holds the bond\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
<<<<<<< HEAD
                  "src": "1579:12:0",
=======
                  "src": "1627:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1579:4:0",
=======
                    "src": "1627:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "name": "_bondholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
<<<<<<< HEAD
                  "src": "1593:19:0",
=======
                  "src": "1641:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1593:7:0",
=======
                    "src": "1641:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1578:35:0"
=======
              "src": "1626:35:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1620:0:0"
            },
            "scope": 153,
            "src": "1562:222:0",
=======
              "src": "1668:0:0"
            },
            "scope": 153,
            "src": "1610:227:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1839:36:0",
=======
              "src": "1893:38:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "bonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
<<<<<<< HEAD
                      "src": "1856:5:0",
=======
                      "src": "1911:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                        "typeString": "contract BOND[] storage ref"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "1856:12:0",
=======
                    "src": "1911:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 137,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "1849:19:0"
=======
                  "src": "1904:19:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBondLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1811:2:0"
=======
              "src": "1865:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
<<<<<<< HEAD
                  "src": "1834:4:0",
=======
                  "src": "1888:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1834:4:0",
=======
                    "src": "1888:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1833:6:0"
            },
            "scope": 153,
            "src": "1789:86:0",
=======
              "src": "1887:6:0"
            },
            "scope": 153,
            "src": "1843:88:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1936:45:0",
=======
              "src": "1993:48:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
<<<<<<< HEAD
                        "src": "1955:7:0",
=======
                        "src": "2013:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
<<<<<<< HEAD
                        "src": "1964:8:0",
=======
                        "src": "2022:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 146,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        152,
<<<<<<< HEAD
                        528
                      ],
                      "referencedDeclaration": 152,
                      "src": "1946:8:0",
=======
                        471
                      ],
                      "referencedDeclaration": 152,
                      "src": "2004:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1946:27:0",
=======
                    "src": "2004:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1946:27:0"
=======
                  "src": "2004:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
<<<<<<< HEAD
                  "src": "1898:12:0",
=======
                  "src": "1955:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1898:4:0",
=======
                    "src": "1955:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
<<<<<<< HEAD
                  "src": "1912:16:0",
=======
                  "src": "1969:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1912:7:0",
=======
                    "src": "1969:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1897:32:0"
=======
              "src": "1954:32:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1936:0:0"
            },
            "scope": 153,
            "src": "1880:101:0",
=======
              "src": "1993:0:0"
            },
            "scope": 153,
            "src": "1937:104:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
<<<<<<< HEAD
        "src": "232:1752:0"
=======
        "src": "240:1806:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208
        ],
        "name": "BOND",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 155,
            "name": "bondHolder",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2005:18:0",
=======
            "src": "2069:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 154,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2005:7:0",
=======
              "src": "2069:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 157,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2029:11:0",
=======
            "src": "2094:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2029:4:0",
=======
              "src": "2094:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 159,
            "name": "fedTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2046:23:0",
=======
            "src": "2112:23:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2046:7:0",
=======
              "src": "2112:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 161,
            "name": "Fed",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2075:12:0",
=======
            "src": "2142:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FEDToken_$153",
              "typeString": "contract FEDToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 160,
              "name": "FEDToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
<<<<<<< HEAD
              "src": "2075:8:0",
=======
              "src": "2142:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FEDToken_$153",
                "typeString": "contract FEDToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2093:13:0",
=======
            "src": "2161:13:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 162,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2093:7:0",
=======
              "src": "2161:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2183:133:0",
=======
              "src": "2252:139:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "bondHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
<<<<<<< HEAD
                      "src": "2193:10:0",
=======
                      "src": "2263:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 173,
                      "name": "_bondHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
<<<<<<< HEAD
                      "src": "2206:11:0",
=======
                      "src": "2276:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2193:24:0",
=======
                    "src": "2263:24:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2193:24:0"
=======
                  "src": "2263:24:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
<<<<<<< HEAD
                      "src": "2227:6:0",
=======
                      "src": "2298:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
<<<<<<< HEAD
                      "src": "2236:7:0",
=======
                      "src": "2307:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2227:16:0",
=======
                    "src": "2298:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2227:16:0"
=======
                  "src": "2298:16:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "fedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
<<<<<<< HEAD
                      "src": "2253:15:0",
=======
                      "src": "2325:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "_fedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
<<<<<<< HEAD
                      "src": "2271:9:0",
=======
                      "src": "2343:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2253:27:0",
=======
                    "src": "2325:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2253:27:0"
=======
                  "src": "2325:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
<<<<<<< HEAD
                      "src": "2290:5:0",
=======
                      "src": "2363:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 984,
                        "src": "2298:3:0",
=======
                        "referencedDeclaration": 927,
                        "src": "2371:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "2298:10:0",
=======
                      "src": "2371:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2290:18:0",
=======
                    "src": "2363:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2290:18:0"
=======
                  "src": "2363:18:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 190,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "_bondHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2124:19:0",
=======
                  "src": "2193:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2124:7:0",
=======
                    "src": "2193:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2145:12:0",
=======
                  "src": "2214:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2145:4:0",
=======
                    "src": "2214:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "name": "_fedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2158:17:0",
=======
                  "src": "2227:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2158:7:0",
=======
                    "src": "2227:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2123:53:0"
=======
              "src": "2192:53:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2183:0:0"
            },
            "scope": 208,
            "src": "2112:204:0",
=======
              "src": "2252:0:0"
            },
            "scope": 208,
            "src": "2181:210:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2424:89:0",
=======
              "src": "2503:92:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "Fed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
<<<<<<< HEAD
                      "src": "2434:3:0",
=======
                      "src": "2514:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FEDToken_$153",
                        "typeString": "contract FEDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "fedTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
<<<<<<< HEAD
                          "src": "2449:15:0",
=======
                          "src": "2529:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 194,
                        "name": "FEDToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
<<<<<<< HEAD
                        "src": "2440:8:0",
=======
                        "src": "2520:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FEDToken_$153_$",
                          "typeString": "type(contract FEDToken)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2440:25:0",
=======
                      "src": "2520:25:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FEDToken_$153",
                        "typeString": "contract FEDToken"
                      }
                    },
<<<<<<< HEAD
                    "src": "2434:31:0",
=======
                    "src": "2514:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FEDToken_$153",
                      "typeString": "contract FEDToken"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2434:31:0"
=======
                  "src": "2514:31:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
<<<<<<< HEAD
                        "src": "2488:6:0",
=======
                        "src": "2569:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "bondHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
<<<<<<< HEAD
                        "src": "2495:10:0",
=======
                        "src": "2576:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "Fed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
<<<<<<< HEAD
                        "src": "2475:3:0",
=======
                        "src": "2556:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FEDToken_$153",
                          "typeString": "contract FEDToken"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
<<<<<<< HEAD
                      "src": "2475:12:0",
=======
                      "src": "2556:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2475:31:0",
=======
                    "src": "2556:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2475:31:0"
                }
              ]
            },
            "documentation": "@dev releases the tokens in the bond contract",
=======
                  "src": "2556:31:0"
                }
              ]
            },
            "documentation": "@dev releases the tokens in the bond contract\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 207,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "releaseAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2414:2:0"
=======
              "src": "2493:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2424:0:0"
            },
            "scope": 208,
            "src": "2392:121:0",
=======
              "src": "2503:0:0"
            },
            "scope": 208,
            "src": "2471:124:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
<<<<<<< HEAD
        "src": "1985:531:0"
      }
    ],
    "src": "0:2516:0"
=======
        "src": "2048:552:0"
      }
    ],
    "src": "0:2600:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
  },
  "legacyAST": {
    "absolutePath": "/home/satya/dev/FEDToken/contracts/FEDToken.sol",
    "exportedSymbols": {
      "BOND": [
        208
      ],
      "FEDToken": [
        153
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 209,
<<<<<<< HEAD
        "sourceUnit": 723,
        "src": "26:71:0",
=======
        "sourceUnit": 666,
        "src": "28:71:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 722,
              "src": "253:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$722",
=======
              "referencedDeclaration": 665,
              "src": "261:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$665",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                "typeString": "contract MintableToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
<<<<<<< HEAD
            "src": "253:13:0"
=======
            "src": "261:13:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
          }
        ],
        "contractDependencies": [
          208,
<<<<<<< HEAD
          445,
          541,
          584,
          616,
          722,
          969
        ],
        "contractKind": "contract",
        "documentation": "@title FedToken\n@dev ERC20 compatible token that responds to price increases and keeps the value\nof the token stable",
=======
          388,
          484,
          527,
          559,
          665,
          912
        ],
        "contractKind": "contract",
        "documentation": "@title FedToken\r\n@dev ERC20 compatible token that responds to price increases and keeps the value\r\nof the token stable\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153,
<<<<<<< HEAD
          722,
          445,
          969,
          541,
          584,
          616
=======
          665,
          388,
          912,
          484,
          527,
          559
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
        ],
        "name": "FEDToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "273:31:0",
=======
            "src": "282:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "273:6:0",
=======
              "src": "282:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "464544546f6b656e",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "294:10:0",
=======
              "src": "303:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_df0a320da3799808dc953aab59040a7be33091aecc5da1209fe3836856948e8f",
                "typeString": "literal_string \"FEDToken\""
              },
              "value": "FEDToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "310:28:0",
=======
            "src": "320:28:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "310:6:0",
=======
              "src": "320:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "464544",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "333:5:0",
=======
              "src": "343:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_016972da6aa6b866309992c38768edc71dfd1c8d0e036a6339dc0369cd2065db",
                "typeString": "literal_string \"FED\""
              },
              "value": "FED"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "344:25:0",
=======
            "src": "355:25:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 11,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "344:5:0",
=======
              "src": "355:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "368:1:0",
=======
              "src": "379:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "375:38:0",
=======
            "src": "387:38:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "375:4:0",
=======
              "src": "387:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "404:9:0",
=======
              "src": "416:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000_by_1",
                "typeString": "int_const 500000000"
              },
              "value": "500000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "480:21:0",
=======
            "src": "494:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "480:4:0",
=======
              "src": "494:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "498:3:0",
=======
              "src": "512:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "name": "needMint",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "507:26:0",
=======
            "src": "522:26:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "507:4:0",
=======
              "src": "522:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "528:5:0",
=======
              "src": "543:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "bonds",
            "nodeType": "VariableDeclaration",
            "scope": 153,
<<<<<<< HEAD
            "src": "539:12:0",
=======
            "src": "555:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
              "typeString": "contract BOND[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 23,
                "name": "BOND",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 208,
<<<<<<< HEAD
                "src": "539:4:0",
=======
                "src": "555:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_BOND_$208",
                  "typeString": "contract BOND"
                }
              },
              "id": 24,
              "length": null,
              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
              "src": "539:6:0",
=======
              "src": "555:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage_ptr",
                "typeString": "contract BOND[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "578:93:0",
=======
              "src": "595:96:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 460,
                      "src": "588:12:0",
=======
                      "referencedDeclaration": 403,
                      "src": "606:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
<<<<<<< HEAD
                      "src": "603:14:0",
=======
                      "src": "621:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "588:29:0",
=======
                    "src": "606:29:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "588:29:0"
=======
                  "src": "606:29:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 458,
                        "src": "627:8:0",
=======
                        "referencedDeclaration": 401,
                        "src": "646:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 35,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 984,
                          "src": "636:3:0",
=======
                          "referencedDeclaration": 927,
                          "src": "655:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "636:10:0",
=======
                        "src": "655:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "627:20:0",
=======
                      "src": "646:20:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
<<<<<<< HEAD
                      "src": "650:14:0",
=======
                      "src": "669:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "627:37:0",
=======
                    "src": "646:37:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "627:37:0"
=======
                  "src": "646:37:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 40,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "568:2:0"
=======
              "src": "585:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "578:0:0"
            },
            "scope": 153,
            "src": "557:114:0",
=======
              "src": "595:0:0"
            },
            "scope": 153,
            "src": "574:117:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "857:208:0",
=======
              "src": "882:216:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "_numberOfBonds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
<<<<<<< HEAD
                          "src": "875:14:0",
=======
                          "src": "901:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "892:1:0",
=======
                          "src": "918:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "875:18:0",
=======
                        "src": "901:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "867:7:0",
=======
                        930,
                        931
                      ],
                      "referencedDeclaration": 930,
                      "src": "893:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "867:27:0",
=======
                    "src": "893:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "867:27:0"
=======
                  "src": "893:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "bonds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
<<<<<<< HEAD
                            "src": "912:5:0",
=======
                            "src": "939:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                              "typeString": "contract BOND[] storage ref"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "912:12:0",
=======
                          "src": "939:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "928:1:0",
=======
                          "src": "955:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "912:17:0",
=======
                        "src": "939:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        987,
                        988
                      ],
                      "referencedDeclaration": 987,
                      "src": "904:7:0",
=======
                        930,
                        931
                      ],
                      "referencedDeclaration": 930,
                      "src": "931:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "904:26:0",
=======
                    "src": "931:26:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "904:26:0"
=======
                  "src": "931:26:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "980:78:0",
=======
                    "src": "1008:81:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "bonds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
<<<<<<< HEAD
                                "src": "994:5:0",
=======
                                "src": "1023:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                                  "typeString": "contract BOND[] storage ref"
                                }
                              },
                              "id": 70,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 69,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
<<<<<<< HEAD
                                "src": "1000:1:0",
=======
                                "src": "1029:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "994:8:0",
=======
                              "src": "1023:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BOND_$208",
                                "typeString": "contract BOND"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "releaseAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
<<<<<<< HEAD
                            "src": "994:22:0",
=======
                            "src": "1023:22:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "994:24:0",
=======
                          "src": "1023:24:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "994:24:0"
=======
                        "src": "1023:24:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "1032:15:0",
=======
                          "src": "1062:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 74,
                              "name": "bonds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
<<<<<<< HEAD
                              "src": "1039:5:0",
=======
                              "src": "1069:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                                "typeString": "contract BOND[] storage ref"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 75,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
<<<<<<< HEAD
                              "src": "1045:1:0",
=======
                              "src": "1075:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1039:8:0",
=======
                            "src": "1069:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BOND_$208",
                              "typeString": "contract BOND"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "1032:15:0"
=======
                        "src": "1062:15:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
<<<<<<< HEAD
                      "src": "957:1:0",
=======
                      "src": "985:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "_numberOfBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
<<<<<<< HEAD
                      "src": "959:14:0",
=======
                      "src": "987:14:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "957:16:0",
=======
                    "src": "985:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "initializationExpression": {
                    "assignments": [
                      59
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
<<<<<<< HEAD
                        "src": "944:6:0",
=======
                        "src": "972:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "944:4:0",
=======
                          "src": "972:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 61,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "953:1:0",
=======
                      "src": "981:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "944:10:0"
=======
                    "src": "972:10:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "975:3:0",
=======
                      "src": "1003:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
<<<<<<< HEAD
                        "src": "975:1:0",
=======
                        "src": "1003:1:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "975:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "940:118:0"
                }
              ]
            },
            "documentation": "@dev transfers value of bond back to owner\n@param _numberOfBonds the number of bonds to be released",
=======
                    "src": "1003:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "968:121:0"
                }
              ]
            },
            "documentation": "@dev transfers value of bond back to owner\r\n@param _numberOfBonds the number of bonds to be released\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 82,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "releaseBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "_numberOfBonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
<<<<<<< HEAD
                  "src": "830:19:0",
=======
                  "src": "855:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "830:4:0",
=======
                    "src": "855:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "829:21:0"
=======
              "src": "854:21:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "857:0:0"
            },
            "scope": 153,
            "src": "809:256:0",
=======
              "src": "882:0:0"
            },
            "scope": 153,
            "src": "834:264:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1309:80:0",
=======
              "src": "1348:83:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
<<<<<<< HEAD
                        "src": "1324:3:0",
=======
                        "src": "1364:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
<<<<<<< HEAD
                        "src": "1328:7:0",
=======
                        "src": "1368:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 702,
                      "src": "1319:4:0",
=======
                      "referencedDeclaration": 645,
                      "src": "1359:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1319:17:0",
=======
                    "src": "1359:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1319:17:0"
                }
              ]
            },
            "documentation": "@dev mints more tokens, called for every token holder\n@param _amount amount of tokens to be minted to\n@param _to address to mint the tokens to",
=======
                  "src": "1359:17:0"
                }
              ]
            },
            "documentation": "@dev mints more tokens, called for every token holder\r\n@param _amount amount of tokens to be minted to\r\n@param _to address to mint the tokens to\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mintToDecrease",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
<<<<<<< HEAD
                  "src": "1276:12:0",
=======
                  "src": "1315:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1276:4:0",
=======
                    "src": "1315:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
<<<<<<< HEAD
                  "src": "1289:11:0",
=======
                  "src": "1328:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1289:7:0",
=======
                    "src": "1328:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1275:26:0"
=======
              "src": "1314:26:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1309:0:0"
            },
            "scope": 153,
            "src": "1252:137:0",
=======
              "src": "1348:0:0"
            },
            "scope": 153,
            "src": "1291:140:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1620:164:0",
=======
              "src": "1668:169:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "assignments": [
                    103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103,
                      "name": "bond",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
<<<<<<< HEAD
                      "src": "1630:9:0",
=======
                      "src": "1679:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BOND_$208",
                        "typeString": "contract BOND"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 102,
                        "name": "BOND",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 208,
<<<<<<< HEAD
                        "src": "1630:4:0",
=======
                        "src": "1679:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_bondholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
<<<<<<< HEAD
                        "src": "1651:11:0",
=======
                        "src": "1700:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
<<<<<<< HEAD
                        "src": "1663:7:0",
=======
                        "src": "1712:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1011,
                            "src": "1679:4:0",
=======
                            "referencedDeclaration": 954,
                            "src": "1728:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FEDToken_$153",
                              "typeString": "contract FEDToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FEDToken_$153",
                              "typeString": "contract FEDToken"
                            }
                          ],
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1671:7:0",
=======
                          "src": "1720:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1671:13:0",
=======
                        "src": "1720:13:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "1642:8:0",
=======
                      "src": "1691:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_BOND_$208_$",
                        "typeString": "function (address,uint256,address) returns (contract BOND)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 104,
                        "name": "BOND",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 208,
<<<<<<< HEAD
                        "src": "1646:4:0",
=======
                        "src": "1695:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1642:43:0",
=======
                    "src": "1691:43:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BOND_$208",
                      "typeString": "contract BOND"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1630:55:0"
=======
                  "src": "1679:55:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
<<<<<<< HEAD
                        "src": "1706:4:0",
=======
                        "src": "1756:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BOND_$208",
                          "typeString": "contract BOND"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "bonds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
<<<<<<< HEAD
                        "src": "1695:5:0",
=======
                        "src": "1745:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                          "typeString": "contract BOND[] storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "1695:10:0",
=======
                      "src": "1745:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_BOND_$208_$returns$_t_uint256_$",
                        "typeString": "function (contract BOND) returns (uint256)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1695:16:0",
=======
                    "src": "1745:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1695:16:0"
=======
                  "src": "1745:16:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 458,
                        "src": "1721:8:0",
=======
                        "referencedDeclaration": 401,
                        "src": "1772:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "_bondholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
<<<<<<< HEAD
                        "src": "1730:11:0",
=======
                        "src": "1781:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1721:21:0",
=======
                      "src": "1772:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 122,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 458,
                          "src": "1745:8:0",
=======
                          "referencedDeclaration": 401,
                          "src": "1796:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_bondholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
<<<<<<< HEAD
                          "src": "1754:11:0",
=======
                          "src": "1805:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1745:21:0",
=======
                        "src": "1796:21:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
<<<<<<< HEAD
                        "src": "1769:7:0",
=======
                        "src": "1820:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      "src": "1745:31:0",
=======
                      "src": "1796:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1721:55:0",
=======
                    "src": "1772:55:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1721:55:0"
                }
              ]
            },
            "documentation": "@dev adds bonds that store tokens\n@param _amount amount of tokens to be stored\n@param _bondholder the address that holds the bond",
=======
                  "src": "1772:55:0"
                }
              ]
            },
            "documentation": "@dev adds bonds that store tokens\r\n@param _amount amount of tokens to be stored\r\n@param _bondholder the address that holds the bond\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
<<<<<<< HEAD
                  "src": "1579:12:0",
=======
                  "src": "1627:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1579:4:0",
=======
                    "src": "1627:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "name": "_bondholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
<<<<<<< HEAD
                  "src": "1593:19:0",
=======
                  "src": "1641:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1593:7:0",
=======
                    "src": "1641:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1578:35:0"
=======
              "src": "1626:35:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1620:0:0"
            },
            "scope": 153,
            "src": "1562:222:0",
=======
              "src": "1668:0:0"
            },
            "scope": 153,
            "src": "1610:227:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1839:36:0",
=======
              "src": "1893:38:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "bonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
<<<<<<< HEAD
                      "src": "1856:5:0",
=======
                      "src": "1911:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_BOND_$208_$dyn_storage",
                        "typeString": "contract BOND[] storage ref"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "1856:12:0",
=======
                    "src": "1911:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 137,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "1849:19:0"
=======
                  "src": "1904:19:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBondLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1811:2:0"
=======
              "src": "1865:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
<<<<<<< HEAD
                  "src": "1834:4:0",
=======
                  "src": "1888:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1834:4:0",
=======
                    "src": "1888:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1833:6:0"
            },
            "scope": 153,
            "src": "1789:86:0",
=======
              "src": "1887:6:0"
            },
            "scope": 153,
            "src": "1843:88:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1936:45:0",
=======
              "src": "1993:48:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
<<<<<<< HEAD
                        "src": "1955:7:0",
=======
                        "src": "2013:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
<<<<<<< HEAD
                        "src": "1964:8:0",
=======
                        "src": "2022:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 146,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        152,
<<<<<<< HEAD
                        528
                      ],
                      "referencedDeclaration": 152,
                      "src": "1946:8:0",
=======
                        471
                      ],
                      "referencedDeclaration": 152,
                      "src": "2004:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1946:27:0",
=======
                    "src": "2004:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1946:27:0"
=======
                  "src": "2004:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
<<<<<<< HEAD
                  "src": "1898:12:0",
=======
                  "src": "1955:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1898:4:0",
=======
                    "src": "1955:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
<<<<<<< HEAD
                  "src": "1912:16:0",
=======
                  "src": "1969:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1912:7:0",
=======
                    "src": "1969:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1897:32:0"
=======
              "src": "1954:32:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1936:0:0"
            },
            "scope": 153,
            "src": "1880:101:0",
=======
              "src": "1993:0:0"
            },
            "scope": 153,
            "src": "1937:104:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
<<<<<<< HEAD
        "src": "232:1752:0"
=======
        "src": "240:1806:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208
        ],
        "name": "BOND",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 155,
            "name": "bondHolder",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2005:18:0",
=======
            "src": "2069:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 154,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2005:7:0",
=======
              "src": "2069:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 157,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2029:11:0",
=======
            "src": "2094:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2029:4:0",
=======
              "src": "2094:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 159,
            "name": "fedTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2046:23:0",
=======
            "src": "2112:23:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2046:7:0",
=======
              "src": "2112:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 161,
            "name": "Fed",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2075:12:0",
=======
            "src": "2142:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FEDToken_$153",
              "typeString": "contract FEDToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 160,
              "name": "FEDToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
<<<<<<< HEAD
              "src": "2075:8:0",
=======
              "src": "2142:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FEDToken_$153",
                "typeString": "contract FEDToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 208,
<<<<<<< HEAD
            "src": "2093:13:0",
=======
            "src": "2161:13:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 162,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "2093:7:0",
=======
              "src": "2161:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2183:133:0",
=======
              "src": "2252:139:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "bondHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
<<<<<<< HEAD
                      "src": "2193:10:0",
=======
                      "src": "2263:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 173,
                      "name": "_bondHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
<<<<<<< HEAD
                      "src": "2206:11:0",
=======
                      "src": "2276:11:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2193:24:0",
=======
                    "src": "2263:24:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2193:24:0"
=======
                  "src": "2263:24:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
<<<<<<< HEAD
                      "src": "2227:6:0",
=======
                      "src": "2298:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
<<<<<<< HEAD
                      "src": "2236:7:0",
=======
                      "src": "2307:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2227:16:0",
=======
                    "src": "2298:16:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2227:16:0"
=======
                  "src": "2298:16:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "fedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
<<<<<<< HEAD
                      "src": "2253:15:0",
=======
                      "src": "2325:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "_fedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
<<<<<<< HEAD
                      "src": "2271:9:0",
=======
                      "src": "2343:9:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2253:27:0",
=======
                    "src": "2325:27:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2253:27:0"
=======
                  "src": "2325:27:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
<<<<<<< HEAD
                      "src": "2290:5:0",
=======
                      "src": "2363:5:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 984,
                        "src": "2298:3:0",
=======
                        "referencedDeclaration": 927,
                        "src": "2371:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "2298:10:0",
=======
                      "src": "2371:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2290:18:0",
=======
                    "src": "2363:18:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2290:18:0"
=======
                  "src": "2363:18:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                }
              ]
            },
            "documentation": null,
            "id": 190,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "_bondHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2124:19:0",
=======
                  "src": "2193:19:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2124:7:0",
=======
                    "src": "2193:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2145:12:0",
=======
                  "src": "2214:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2145:4:0",
=======
                    "src": "2214:4:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "name": "_fedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
<<<<<<< HEAD
                  "src": "2158:17:0",
=======
                  "src": "2227:17:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2158:7:0",
=======
                    "src": "2227:7:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2123:53:0"
=======
              "src": "2192:53:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2183:0:0"
            },
            "scope": 208,
            "src": "2112:204:0",
=======
              "src": "2252:0:0"
            },
            "scope": 208,
            "src": "2181:210:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2424:89:0",
=======
              "src": "2503:92:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "Fed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
<<<<<<< HEAD
                      "src": "2434:3:0",
=======
                      "src": "2514:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FEDToken_$153",
                        "typeString": "contract FEDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "fedTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
<<<<<<< HEAD
                          "src": "2449:15:0",
=======
                          "src": "2529:15:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 194,
                        "name": "FEDToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
<<<<<<< HEAD
                        "src": "2440:8:0",
=======
                        "src": "2520:8:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FEDToken_$153_$",
                          "typeString": "type(contract FEDToken)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2440:25:0",
=======
                      "src": "2520:25:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FEDToken_$153",
                        "typeString": "contract FEDToken"
                      }
                    },
<<<<<<< HEAD
                    "src": "2434:31:0",
=======
                    "src": "2514:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FEDToken_$153",
                      "typeString": "contract FEDToken"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2434:31:0"
=======
                  "src": "2514:31:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
<<<<<<< HEAD
                        "src": "2488:6:0",
=======
                        "src": "2569:6:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "bondHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
<<<<<<< HEAD
                        "src": "2495:10:0",
=======
                        "src": "2576:10:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "Fed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
<<<<<<< HEAD
                        "src": "2475:3:0",
=======
                        "src": "2556:3:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FEDToken_$153",
                          "typeString": "contract FEDToken"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
<<<<<<< HEAD
                      "src": "2475:12:0",
=======
                      "src": "2556:12:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2475:31:0",
=======
                    "src": "2556:31:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2475:31:0"
                }
              ]
            },
            "documentation": "@dev releases the tokens in the bond contract",
=======
                  "src": "2556:31:0"
                }
              ]
            },
            "documentation": "@dev releases the tokens in the bond contract\r",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "id": 207,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "releaseAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2414:2:0"
=======
              "src": "2493:2:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2424:0:0"
            },
            "scope": 208,
            "src": "2392:121:0",
=======
              "src": "2503:0:0"
            },
            "scope": 208,
            "src": "2471:124:0",
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
<<<<<<< HEAD
        "src": "1985:531:0"
      }
    ],
    "src": "0:2516:0"
=======
        "src": "2048:552:0"
      }
    ],
    "src": "0:2600:0"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa085422277095a156ed836bb34d877fe1ebc305b",
      "transactionHash": "0x58c31b02e0470b7a21da9247fb704dacc6ffc2b6221fe7fcaf1a843db522aab8"
    },
    "1535756807926": {
      "events": {},
      "links": {},
      "address": "0xbcf9a8cf8becea71de1dd07872cda960bed37fc9",
      "transactionHash": "0x85ab5feb75e5dceb22c4d256a5d69a8ee9fe77abc00c61bce3fc47c099ff2e07"
    },
    "1535843443623": {
      "events": {},
      "links": {},
      "address": "0xffcc995ad13888e6e4ec02dfbdb2deea158f701b",
      "transactionHash": "0xe569ea5f44e6a7eb664ea53bda17798b44d0bc933c5d17c72ad5f8adebdbc0a6"
    },
<<<<<<< HEAD
    "1536155250331": {
      "events": {},
      "links": {},
      "address": "0x10d0a871d5586a3c8bfcfdd6876704f2e0435771",
      "transactionHash": "0xaeff102f5f0515ccb9d58f7b393b0152786850eebc5c86880ab0d71f063a1faa"
    },
    "1536189403083": {
      "events": {},
      "links": {},
      "address": "0x7e731b5bd1d05ee907b5f16139f0ad9ddd19eb6f",
      "transactionHash": "0x0fd7da0e87318ef5f9176badce1ff27ca373b52b49cfc51c1e7cf7c460ba927e"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-06T20:52:03.796Z"
=======
    "1536121776912": {
      "events": {},
      "links": {},
      "address": "0x8dc49617f4a715d710b2763678edd379ad0c7a0d",
      "transactionHash": "0x10df3cbd1c92c611304c160c15adc79bc7bd984f38448b461ee6532ad7da153b"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-05T04:30:12.624Z"
>>>>>>> f41ac0d8bb6430cc9adfd58531aa23a5864adde9
}